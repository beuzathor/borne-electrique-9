---
---
<div class="relative">
  <div id="map" class="h-[600px] w-full rounded-lg shadow-lg"></div>
  <div id="map-error" class="hidden absolute inset-0 bg-gray-100 rounded-lg flex items-center justify-center">
    <p class="text-red-600 text-center p-4">
      Une erreur est survenue lors du chargement de la carte. Veuillez r√©essayer plus tard.
    </p>
  </div>
  <div id="map-loading" class="absolute inset-0 bg-white bg-opacity-75 flex items-center justify-center">
    <div class="text-center">
      <div class="animate-spin rounded-full h-12 w-12 border-4 border-indigo-600 border-t-transparent mb-4"></div>
      <p class="text-gray-600">Chargement de la carte...</p>
    </div>
  </div>
</div>

<script>
  import { initializeMap } from './mapInitializer';
  
  // Add Leaflet CSS
  const leafletCSS = document.createElement('link');
  leafletCSS.rel = 'stylesheet';
  leafletCSS.href = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.css';
  leafletCSS.integrity = 'sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=';
  leafletCSS.crossOrigin = '';
  document.head.appendChild(leafletCSS);

  // Wait for both DOM and CSS to be ready
  Promise.all([
    new Promise(resolve => {
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', resolve);
      } else {
        resolve();
      }
    }),
    new Promise(resolve => {
      leafletCSS.onload = resolve;
    })
  ]).then(async () => {
    try {
      await initializeMap('map');
      const loadingElement = document.getElementById('map-loading');
      if (loadingElement) {
        loadingElement.classList.add('hidden');
      }
    } catch (error) {
      console.error('Map initialization error:', error);
      const errorElement = document.getElementById('map-error');
      const mapElement = document.getElementById('map');
      const loadingElement = document.getElementById('map-loading');
      
      if (errorElement && mapElement && loadingElement) {
        errorElement.classList.remove('hidden');
        mapElement.classList.add('opacity-25');
        loadingElement.classList.add('hidden');
      }
    }
  });
</script>